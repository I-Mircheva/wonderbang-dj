# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/


# DOES NOT WORK LOVE ;(

# document.addEventListener 'turbolinks:load', ->
#   console.log 'It works on each visit!'
#   return


canvas = document.getElementById('canvas')
element = document.getElementById('container')
console.log(element)

Bar = (x, width, delay) ->
  @position =
    x: x
    y: canvas.height
  @width = width
  @timer = delay
  @height = 0

  @update = ->
    @timer += 0.01
    distanceBetweenBarAndMouse =
      x: @position.x + @width / 2 - (mouse.x)
      y: @position.y - (@height) - (mouse.y)
    if distanceBetweenBarAndMouse.y < maxPullDistance and distanceBetweenBarAndMouse.x > -@width / 2 and distanceBetweenBarAndMouse.x < @width / 2
      @height += (@position.y - (@height) - (mouse.y)) * 0.12
    else if distanceBetweenBarAndMouse.y < maxPullDistance and distanceBetweenBarAndMouse.x > -@width * 1.5 and distanceBetweenBarAndMouse.x < @width * 1.5
      @height += (@position.y - (@height) - (mouse.y)) * 0.01
    else
      maxBarHeightWithSin = canvas.height / 3
      # Smooth animation down to original height
      @height -= (@height - Math.abs(Math.sin(@timer) * canvas.height / 2.5)) * 0.12
    @draw()
    return

  @draw = ->
    # Change hue of bar gradually from 1 to 255 and then back from 255 to 1
    c.fillStyle = 'hsl(' + Math.abs(Math.sin(@timer) * 255) + ', 50%, 50%)'
    c.fillRect @position.x, canvas.height - (@height), @width, @height
    return

  return

createBars = ->
  bars = []
  barCount = 77
  barWidth = canvas.width / barCount
  barPosition = 0
  barDelay = 0
  i = 0
  while i < barCount
    bars.push new Bar(barPosition, barWidth, barDelay)
    barPosition += barWidth
    barDelay += 0.2
    i++
  return

animate = ->
  window.requestAnimationFrame animate
  c.fillStyle = 'rgba(0,0,0,0.1)'
  c.fillRect 0, 0, canvas.width, canvas.height
  c.drawImage imageObj, 10, 3, canvas.width * 0.1, canvas.height
  bars.forEach (bar) ->
    bar.update()
    return
  return

element.appendChild canvas
# console.log(element);
canvas.width = 1800
canvas.height = element.offsetHeight
c = canvas.getContext('2d')
imageObj = new Image

imageObj.onload = ->
  c.drawImage imageObj, 0, 0
  return

imageObj.src = 'https://media.sundazed.com/media/images/LP-5433-vinyl.png'
mouse =
  x: undefined
  y: undefined
maxPullDistance = canvas.height
canvas.addEventListener 'mousemove', (e) ->
  mouse.x = e.clientX
  mouse.y = e.clientY
  return
window.addEventListener 'resize', (e) ->
  canvas.width = window.innerWidth
  canvas.height = element.offsetHeight
  createBars()
  return
bars = undefined
barCount = undefined
barWidth = undefined
barPosition = undefined
barDelay = undefined
createBars()
animate()

# ---
# generated by js2coffee 2.2.0
